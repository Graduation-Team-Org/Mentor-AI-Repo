import 'dart:ui';
import 'package:flutter/material.dart';

class TermsConditionsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFF110A2B),
      body: Stack(
        children: [
          Positioned(
            top: 300,
            left: 60,
            child: ImageFiltered(
              imageFilter: ImageFilter.blur(sigmaX: 20, sigmaY: 20),
              child: Container(
                width: 70,
                height: 70,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: Color(0xFF352250),
                ),
              ),
            ),
          ),
          Positioned(
            top: -30,
            right: -70,
            child: ImageFiltered(
              imageFilter: ImageFilter.blur(sigmaX: 100, sigmaY: 100),
              child: Container(
                width: 200,
                height: 200,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: Color(0xFF9860E4),
                ),
              ),
            ),
          ),
          Positioned(
            top: 100,
            left: 200,
            child: ImageFiltered(
              imageFilter: ImageFilter.blur(sigmaX: 100, sigmaY: 100),
              child: Container(
                width: 100,
                height: 100,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: Color(0xFF9860E4),
                ),
              ),
            ),
          ),
          Positioned(
            bottom: 50,
            right: 50,
            child: ImageFiltered(
              imageFilter: ImageFilter.blur(sigmaX: 20, sigmaY: 20),
              child: Container(
                width: 70,
                height: 70,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: Color(0xFF40174C),
                ),
              ),
            ),
          ),
          SafeArea(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 20),
              child: Column(
                children: [
                  const SizedBox(height: 20),
                  const Center(
                    child: Text(
                      "Terms and Conditions",
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                        fontFamily: 'Inter',
                      ),
                    ),
                  ),
                  const SizedBox(height: 16),
                  Expanded(
                    child: SingleChildScrollView(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          _buildSection("🎯 Purpose of the Service", [
                            "• Personalized Roadmap Generation",
                            "• Chat with Uploaded Documents",
                            "• Resume Analysis",
                            "• Resume Generation",
                            "• Mock Technical Interviews",
                            "All services are designed to provide mentorship-like guidance to individuals in the tech and software engineering fields.",
                          ]),
                          _buildSection("🧠 AI Usage and Limitations", [
                            "Our app uses AI models (including OpenAI’s GPT-4o and GPT-3.5 Turbo) to generate content.",
                            "Content generated by the AI is based on best practices but should not be considered as professional or legal advice.",
                            "We do not guarantee the absolute accuracy, correctness, or completeness of AI-generated outputs.",
                          ]),
                          _buildSection("📂 User Data and File Uploads", [
                            "Uploaded documents (PDFs, resumes, notes) are temporarily processed to provide services like document chat or resume analysis.",
                            "By uploading, you confirm that you have the right to use and share those files.",
                            "We do not store or share your documents beyond what’s needed for immediate processing, unless explicitly stated.",
                          ]),
                          _buildSection("🔐 Privacy and Security", [
                            "We take your privacy seriously. Please refer to our [Privacy Policy] for detailed information on how we collect and use your data.",
                            "Authentication is handled securely via Firebase.",
                            "We use local device storage (Hive and SharedPreferences) to cache user progress, preferences, and settings.",
                          ]),
                          _buildSection("📵 User Responsibilities", [
                            "Not to use the service for illegal or unauthorized purposes.",
                            "Not to upload harmful, copyrighted, or offensive material.",
                            "To use AI outputs responsibly and verify critical information independently.",
                          ]),
                          _buildSection("⚙️ Availability and Changes", [
                            "We reserve the right to modify or discontinue any part of the Service at any time, with or without notice.",
                            "Features and AI responses may evolve as the models and infrastructure improve.",
                          ]),
                          _buildSection("📘 Intellectual Property", [
                            "All intellectual property related to app structure, design, branding, and original content remains the property of [Your Company Name].",
                            "Users retain ownership of their uploaded files and resume content.",
                          ]),
                          _buildSection("🧾 Subscription and API Usage", [
                            "Some features may require API access or subscription to third-party providers (e.g., OpenAI, AssemblyAI).",
                            "You are responsible for managing your access keys or subscriptions if you use your own.",
                          ]),
                          _buildSection("🚫 Termination", [
                            "We may suspend or terminate your access to the app at our sole discretion if you violate these Terms or misuse the Service.",
                          ]),
                          _buildSection("📩 Contact", [
                            "For support, inquiries, or legal concerns, please contact us at:\n📧 [Your Support Email]",
                          ]),
                          const SizedBox(height: 24),
                        ],
                      ),
                    ),
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      OutlinedButton(
                        onPressed: () => Navigator.pop(context),
                        style: OutlinedButton.styleFrom(
                          side: BorderSide(color: Colors.white70),
                          padding: EdgeInsets.symmetric(horizontal: 30, vertical: 14),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                        ),
                        child: Text(
                          "Accept",
                          style: TextStyle(color: Colors.white70),
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(height: 20),
                ],
              ),
            ),
          ),


        ],
      ),
    );
  }

  Widget _buildSection(String title, List<String> paragraphs) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 24.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold,
              color: Colors.white,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 10),
          ...paragraphs.map((text) => Padding(
            padding: const EdgeInsets.only(bottom: 8.0),
            child: Text(
              text,
              style: const TextStyle(
                fontSize: 15,
                color: Colors.white70,
                height: 1.5,
                fontFamily: 'Inter',
              ),
            ),
          )),
        ],
      ),
    );
  }
}
